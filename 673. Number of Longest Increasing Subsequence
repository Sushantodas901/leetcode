/QUESTION/
Given an integer array nums, return the number of longest increasing subsequences.
Notice that the sequence has to be strictly increasing.

/C++ CODE IMPLEMENTATION/
int findNumberOfLIS(vector<int>& nums) {
         int n = nums.size();
    vector<int> lengths(n, 1);  // Length of LIS ending at index i
    vector<int> counts(n, 1);   // Count of LIS ending at index i

    for (int i = 1; i < n; ++i) {
        for (int j = 0; j < i; ++j) {
            if (nums[i] > nums[j]) {
                if (lengths[i] == lengths[j] + 1) {
                    counts[i] += counts[j];
                } else if (lengths[i] < lengths[j] + 1) {
                    lengths[i] = lengths[j] + 1;
                    counts[i] = counts[j];
                }
            }
        }
    }

    int max_length = *max_element(lengths.begin(), lengths.end());
    int total_count = 0;
    for (int i = 0; i < n; ++i) {
        if (lengths[i] == max_length) {
            total_count += counts[i];
        }
    }

    return total_count;
    }
